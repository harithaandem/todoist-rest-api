name: Build and release

on: [push, 'pull_request']

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10, 12, 13]

    steps:
      - uses: actions/checkout@v2

      - name: Setup and cache Node.js
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          node-version: ${{ matrix.node-version }}
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Run test suite
        run: npm run test:prod
        env:
          CI: true

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2

      - name: Setup and cache Node.js
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          node-version: 13
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: npm install

      - name: Create coverage
        run: npm run coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }} #required

      - name: Create release
        run: npm run semantic-release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          CI: true
